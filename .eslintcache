[{"/Users/philipmayo/GA/budget-app/src/index.js":"1","/Users/philipmayo/GA/budget-app/src/App.js":"2","/Users/philipmayo/GA/budget-app/src/reportWebVitals.js":"3","/Users/philipmayo/GA/budget-app/src/Input.js":"4","/Users/philipmayo/GA/budget-app/src/Header.js":"5","/Users/philipmayo/GA/budget-app/src/Output.js":"6"},{"size":500,"mtime":1609085123223,"results":"7","hashOfConfig":"8"},{"size":1117,"mtime":1609097342446,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1609085123223,"results":"10","hashOfConfig":"8"},{"size":626,"mtime":1609090369646,"results":"11","hashOfConfig":"8"},{"size":196,"mtime":1609085123222,"results":"12","hashOfConfig":"8"},{"size":1062,"mtime":1609107281586,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1g9lyl5",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/Users/philipmayo/GA/budget-app/src/index.js",[],["30","31"],"/Users/philipmayo/GA/budget-app/src/App.js",["32"],"import react, { useState, useRef } from 'react';\nimport './App.css';\nimport Output from \"./Output\";\nimport Input from \"./Input\";\nimport Header from \"./Header\";\n\n\n\n\n\nfunction App() {\n  \n  const budgetItemRef = useRef()\n  const budgetItemPriceRef = useRef()\n  const [budgetItems, setBudgetItems] = useState([])\n\n  function handleAddBudgetItem(e) {\n    const name = budgetItemRef.current.value\n    const price = budgetItemPriceRef.current.value\n    if ((name === '') || (price === '')) return\n    setBudgetItems(prevBudgetItems => {\n      return [...prevBudgetItems, {name: name, price: price}]\n    })\n\n    budgetItemRef.current.value = null\n    budgetItemPriceRef.current.value = null\n  \n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__header\">\n        <Header />\n      </div>\n      \n      <div className=\"app__body\">\n        <Input \n        budgetItemPriceRef={budgetItemPriceRef} \n        budgetItemRef={budgetItemRef} \n        handleAddBudgetItem={handleAddBudgetItem} \n        />\n        <Output \n        budgetItems={budgetItems}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/philipmayo/GA/budget-app/src/reportWebVitals.js",[],"/Users/philipmayo/GA/budget-app/src/Input.js",["33"],"import React, { useRef } from 'react';\nimport \"./Input.css\";\n\nfunction Input({ budgetItemRef, handleAddBudgetItem, budgetItemPriceRef}) {\n    return (\n        <div className=\"input\">\n            <div className=\"input__header\">\n                Input\n            </div>\n            <div className=\"input__addBudgetItem\">\n                <input ref={budgetItemRef} type='text' placeholder='budget category'/>\n                <input ref={budgetItemPriceRef} type='number' placeholder='money'/>\n                <button onClick={handleAddBudgetItem}>Add Item</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Input\n","/Users/philipmayo/GA/budget-app/src/Header.js",[],"/Users/philipmayo/GA/budget-app/src/Output.js",["34"],"import React from 'react';\nimport \"./Output.css\";\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\n\n\n\nfunction Output( { budgetItems }) {\n\n\n\n    let totalPrice = 0\n    budgetItems.map(item =>{\n        const currentPrice = parseInt(item.price) + totalPrice\n        totalPrice = currentPrice\n    })\n\n\n    return (\n        <div className=\"output\">\n        {\n            budgetItems.map((Item, index) =>{\n                return <div className=\"output__item\"\n                        key={index}\n                        >\n                        <div>{Item.name}</div>\n                        <div>{Item.price}</div>\n                        <HighlightOffIcon onClick={deleteItem =>{\n                            console.log(budgetItems)\n                            budgetItems.splice(index, 1)\n                        }}\n                        />\n                    </div>\n            })\n        }\n        <div className=\"output__total\">\n            <h1>Monthly Spending: {totalPrice}</h1>\n\n        </div>\n        </div>\n    )\n}\n\nexport default Output\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":13},{"ruleId":"39","severity":1,"message":"43","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":23},{"ruleId":"44","severity":1,"message":"45","line":12,"column":26,"nodeType":"46","messageId":"47","endLine":12,"endColumn":28},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]